#! /usr/bin/zsh

# mk will create directories that don't exist yet, the only arg necessary is the directory path
mk() {
	mkdir -p "$@"
}

# mkcd will create directories that don't exist yet, the only arg necessary is the file path and cd to the newly created directory
mkcd() {
	mkdir -p "$@" && cd "$@"
}

# mkfile will create a file if it doesn't exist yet and create required directories if they don't exist, the only arg necessary is the file path
mkfile() {
	mkdir -p $(dirname "$1") && touch "$1"
}

# extract will extract the contents of an archive file, the only arg necessary is the file path
extract() {
	tar -xvf "$1"
}

# compress will compress the contents of a directory, the first arg is the output file and the second arg is the directory to compress
compress() {
	tar -czvf "$1" "$2"
}


# Show 256 TERM colors
colors() {
	local X=$(tput op)
	local Y=$(printf %$((COLUMNS - 6))s)
	for i in {0..256}; do
		o=00$i
		echo -e ${o:${#o}-3:3} $(
			tput setaf $i
			tput setab $i
		)${Y// /=}$X
	done
}

# commit with jj while preserving bookmarks at the current parent
jj-commit-up() {
    # Get bookmark(s) at current parent
    local bookmark=$(jj log -r @- --no-graph -T 'bookmarks' | tr -d '*' | grep -v '^$')
    
    # Run commit with any args passed
    jj cv "$@"
    
    # Move bookmark to new commit if one existed
    if [ -n "$bookmark" ]; then
        jj bookmark set "$bookmark" -r @-
    fi
}

# print all aliases
aliases() {
	bat $HOME/.dotfiles/system/.alias
}

tmpgo() {
  tempdir=$(mktemp -d)
  (cd "$tempdir" && go mod init "github.com/jm96441n/tempdir" && touch "main.go" && go mod tidy)
  echo "package main

import \"fmt\"

func main() {
  fmt.Println(\"Hello, World!\")
}
" > "$tempdir/main.go"
  tmux-sessionizer "$tempdir"
}
