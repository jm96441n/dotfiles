# rp - rake parallel tasks
function rp () {
  bundle exec rake parallel:features[4,${*},'--format progress']
}

function mk() {
    mkdir -p "$@" && cd "$@"
}

assume() {
    role=$1
    local creds=$(aws sts assume-role --role-arn arn:aws:iam::496584544324:role/$role --role-session-name role-assume-test)
    echo $creds
    export AWS_SESSION_TOKEN=$(echo $creds|jq -r '.[].SessionToken'|tr -d "\n"|sed 's/null//')
    export AWS_ACCESS_KEY_ID=$(echo -n $creds|jq -r '.[].AccessKeyId'|tr -d "\n"|sed 's/null//')
    export AWS_SECRET_ACCESS_KEY=$(echo -n $creds|jq -r '.[].SecretAccessKey'|tr -d "\n"|sed 's/null//')
}

# \[\e[0m\] resets the color to default color
c_reset='\[\e[0m\]'
#  \e[0;31m\ sets the color to red
c_path='\[\e[0;31m\]'
# \e[0;32m\ sets the color to green
c_git_clean='\[\e[0;32m\]'
# \e[0;31m\ sets the color to red
c_git_dirty='\[\e[0;31m\]'


# Load git completions
git_completion_script="~/.git-completion.bash"
test -s $git_completion_script && source $git_completion_script

# determines if the git branch you are on is clean or dirty
git_prompt ()
{
  # Is this a git directory?
  if ! git rev-parse --git-dir > /dev/null 2>&1; then
    return 0
  fi
  # Grab working branch name
  git_branch=$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')
  # Clean or dirty branch
  if git diff --quiet 2>/dev/null >&2; then
    git_color="${c_git_clean}"
  else
    git_color=${c_git_dirty}
  fi
  echo " [$git_color$git_branch${c_reset}]"
}


# Switch long/short prompt
ps0() {
  unset PROMPT_COMMAND
  PS1='$ '
}

ps1() {
  source "$DOTFILES_DIR"/system/.webpro_prompt
}

ps2() {
  source "$DOTFILES_DIR"/system/.prompt
}

# Show 256 TERM colors
colors() {
  local X=$(tput op)
  local Y=$(printf %$((COLUMNS-6))s)
  for i in {0..256}; do
  o=00$i;
  echo -e ${o:${#o}-3:3} $(tput setaf $i;tput setab $i)${Y// /=}$X;
  done
}

# Add to path

prepend-path() {
  [ -d $1 ] && PATH="$1:$PATH"
}
