#!/usr/bin/zsh

. /etc/os-release
BIN_NAME=$(basename "$0")
COMMAND_NAME=$1
SUB_COMMAND_NAME=$2
DOTFILES_IDE="/usr/bin/nvim"
OS=$NAME

sub_help() {
  echo "Usage: $BIN_NAME <command>"
  echo
  echo "Commands:"
  echo "   clean            Clean up caches (apt/dnf, asdf, gem)"
  echo "   edit             Open dotfiles in vim"
  echo "   help             This help message"
  echo "   update           Update packages and pkg managers (packages, pip, gem, asdf)"
}

sub_edit () {
  /usr/bin/zsh -c "$DOTFILES_IDE $DOTFILES_DIR"
}


sub_update () {
  if [[ $OS == *"Ubuntu"* ]]; then
    sudo apt update && apt upgrade
  elif [[ $OS == *"Fedora"* ]]; then
    sudo dnf upgrade
  fi

  flatpak update
  gem update
  pip install --upgrade pip
  pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -n1 pip install -U
  asdf update
  asdf plugin update --all
}

sub_clean () {
  if [[ $OS == *"Ubuntu"* ]]; then
    sudo apt clean
    sudo apt autoremove
  elif [[ $OS == *"Fedora"* ]]; then
    sudo dnf clean all
  fi

  gem cleanup
  asdf cleanup
}

sub_macos() {
  for DEFAULTS_FILE in "${DOTFILES_DIR}"/macos/defaults*.sh; do
    echo "Applying ${DEFAULTS_FILE}" && . "${DEFAULTS_FILE}"
  done
  echo "Done. Some changes may require a logout/restart to take effect."
}

# Make sure to keep this in sync with the available public commands

sub_completion () {
  echo "clean edit help update"
}

case $COMMAND_NAME in
  "" | "-h" | "--help")
    sub_help
    ;;
  *)
    shift
    sub_${COMMAND_NAME} $@
    if [ $? = 127 ]; then
      echo "'$COMMAND_NAME' is not a known command or has errors." >&2
      sub_help
      exit 1
    fi
    ;;
esac
