// Niri configuration converted from Sway

// Input configuration
input {
    keyboard {
        xkb {
            options "ctrl:nocaps"
        }
        
        repeat-delay 200
        repeat-rate 25
    }
    
    touchpad {
        tap
        dwt
        middle-emulation
        accel-profile "adaptive"
        accel-speed 1.0
    }
    
    // This replicates Sway's focus behavior
    focus-follows-mouse
}

// Output/monitor configuration
output "eDP-1" {
    scale 1.5
}

// Launch wallpaper
spawn-at-startup "swaybg" "-i" "~/.dotfiles/wallpaper/space.png" "-m" "fill"

// Layout configuration
layout {
    // Gaps between windows (inner gaps in Sway)
    gaps 20
    
    
    // Focus indication (equivalent to Sway's focused border color)
    focus-ring {
        active-color "#7fbbb3"
        width 2
    }

    border {
        off
        width 2
        active-color "#32302f"
    }
    
    
    // No outer gaps in Niri by default
    struts {
        left 0
        right 0
        top 0
        bottom 0
    }
}

// Window Rules - similar to Sway's for_window rules
window-rule {
    // Floating windows
//    window window-type="dialog" {
 //       floating
  //      position 5 5
   //     size 320 240
    //}
    
//    window window-type="menu" {
//        floating
//        position 5 5
//        size 320 240
 //   }
    
//    window role="pop-up" {
//        floating
//        position 5 5
//        size 320 240
//    }
//    
//    window role="task_dialog" {
//        floating
//        position 5 5
//        size 320 240
//    }
//    
//    window role="bubble" {
//        floating
//        position 5 5
//        size 320 240
//    }
//    
//    window role="Preferences" {
//        floating
//        position 5 5
//        size 320 240
//    }
}

// Key bindings - converting Sway bindsym to Niri binds
binds {
    // Kill window
    Mod+Shift+q {  close-window; }
    
    // Terminal
    Mod+Return { spawn "ghostty"; }

    // Screenshot
    Mod+Shift+s { spawn "grim" "-g" "$(slurp)" "-" "|" "wl-copy"; }
    
    // App launcher
    Mod+d { spawn "~/.config/wofi/launcher.sh"; }
    
    // Focus movement - in Niri, navigation is between columns and within columns
    Mod+h {  focus-column-left; }
    Mod+j {  focus-window-down; }
    Mod+k {  focus-window-up; }
    Mod+l {  focus-column-right; }
    
    // Arrow keys for focus
    Mod+Left {  focus-column-left; }
    Mod+Down {  focus-window-down; }
    Mod+Up {  focus-window-up; }
    Mod+Right {  focus-column-right; }
    
    // Moving windows
    Mod+Shift+h { move-column-left; }
  //  Mod+Shift+j { move-column-down; }
   // Mod+Shift+k {  move-column-up; }
    Mod+Shift+l {  move-column-right; }
    
    // Arrow keys for moving windows
    Mod+Shift+Left { move-column-left; }
  //  Mod+Shift+Down { action move-window-down; }
//    Mod+Shift+Up { action move-window-up; }
    Mod+Shift+Right { move-column-right; }
    
    // Layout manipulation
//    Mod+c { action consume-window-into-column; }  // Similar to split h
    
    // Fullscreen
   // Mod+f { toggle-fullscreen; }
    
    
    // Floating toggle
//    Mod+Shift+space { action toggle-floating; }
    
    // Focus toggle
//     Mod+space { action toggle-floating-focus; }
    
    // Audio controls
    XF86AudioRaiseVolume { spawn "pactl" "set-sink-volume" "@DEFAULT_SINK@" "+1%"; }
    XF86AudioLowerVolume { spawn "pactl" "set-sink-volume" "@DEFAULT_SINK@" "-1%"; }
    XF86AudioMute { spawn "pactl" "set-sink-mute" "@DEFAULT_SINK@" "toggle"; }
    
    // Workspace switching - Niri uses numeric workspaces
//     Mod+1 { action workspace-switch 1; }
  //   Mod+2 { action workspace-switch 2; }
//     Mod+3 { action workspace-switch 3; }
  //   Mod+4 { action workspace-switch 4; }
//     Mod+5 { action workspace-switch 5; }
//     Mod+6 { action workspace-switch 6; }
//     Mod+7 { action workspace-switch 7; }
//     Mod+8 { action workspace-switch 8; }
//     Mod+9 { action workspace-switch 9; }
//     Mod+0 { action workspace-switch 10; }
    
    // Move container to workspace
    // Mod+Shift+1 { action window-move-to-workspace 1; }
    // Mod+Shift+2 { action window-move-to-workspace 2; }
    // Mod+Shift+3 { action window-move-to-workspace 3; }
    // Mod+Shift+4 { action window-move-to-workspace 4; }
    // Mod+Shift+5 { action window-move-to-workspace 5; }
    // Mod+Shift+6 { action window-move-to-workspace 6; }
    // Mod+Shift+7 { action window-move-to-workspace 7; }
    // Mod+Shift+8 { action window-move-to-workspace 8; }
    // Mod+Shift+9 { action window-move-to-workspace 9; }
    // Mod+Shift+0 { action window-move-to-workspace 10; }
    
    // Config reload
    // Mod+Shift+C { action reload-config; }
    
    // Restart - not directly applicable in Niri but reload config is similar
    // Mod+Shift+R { action reload-config; }
    
    // Exit Niri - Niri has a direct quit action
    Mod+Shift+E { spawn "~/.config/waybar/launch-shutdown-bar.sh"; }
    
    // Resize mode in Niri - there are direct resize actions instead of a mode
    Mod+R {
        // This will show a notification instead of entering a resize mode
        spawn "notify-send" "Niri uses direct resize actions - try Mod+r+arrow keys";
    }
    
    // Resize actions
    //Mod+R+H { action "resize" "left" "-10"; }
    //Mod+R+J { action "resize" "down" "+10"; }
    // Mod+r+k { action resize up -10; }
    // Mod+r+l { action resize right +10; }
    
    // Resize with arrow keys
    // Mod+r+Left { action resize left -10; }
    // Mod+r+Down { action resize down +10; }
    // Mod+r+Up { action resize up -10; }
    // Mod+r+Right { action resize right +10; }
    
    // Window marking - Using similar approach with Wofi
    Mod+m { spawn "" "mark" "$(wofi --dmenu -p 'Mark window:' -L 1)"; }
    Mod+g { spawn "swaymsg" "[con_mark=$(wofi --dmenu -p 'Goto mark:' -L 1)]" "focus"; }
    Mod+u { spawn "swaymsg" "unmark" "$(wofi --dmenu -p 'Unmark window:' -L 1)"; }
}

// Autostart applications
spawn-at-startup "mako"
spawn-at-startup "~/.config/waybar/launch-bar.sh"
spawn-at-startup "systemctl" "--user" "import-environment" "DISPLAY" "WAYLAND_DISPLAY" "SWAYSOCK"
spawn-at-startup "dbus-update-activation-environment" "--systemd" "DISPLAY" "WAYLAND_DISPLAY" "SWAYSOCK"
spawn-at-startup "/usr/libexec/xdg-desktop-portal" "-r"

// Application startup
spawn-at-startup "swayidle" "-w" "timeout" "300" "swaylock -f -i ~/.dotfiles/wallpaper/space.png" "timeout" "600" "niri msg action power-off-monitors" "resume" "niri msg action power-on-monitors" "before-sleep" "swaylock -f -i ~/.dotfiles/wallpaper/space.png"

// Start applications in specific workspaces
// Note: The syntax below uses a shell script to handle workspace switching with application launching
// spawn-at-startup "sh" "-c" "sleep 1 && niri msg action workspace-switch 1 && /usr/bin/ghostty"
// spawn-at-startup "sh" "-c" "sleep 2 && niri msg action workspace-switch 2 && firefox"
// spawn-at-startup "sh" "-c" "sleep 3 && niri msg action workspace-switch 3 && flatpak run com.slack.Slack"
// spawn-at-startup "sh" "-c" "sleep 4 && niri msg action workspace-switch 4 && flatpak run com.spotify.Client"
// spawn-at-startup "sh" "-c" "sleep 5 && niri msg action workspace-switch 5 && flatpak run md.obsidian.Obsidian"

// Animations
//animations {
//    workspace-switch-duration 250
//}

// Preferences
prefer-no-csd

// Environment variables
environment {
    // Add your environment variables here
}
