[core]
  # Excludesfiles allows us to set a global list of things to ignore
  excludesfile = ~/.gitignore_global

  # Sets up NeoVim as the editor
  editor = nvim
	pager = diff-so-fancy | less --tabs=4 -RFX

# These are custom color options for the console
#[color]
#    branch = auto
#    diff = auto
#    status = auto
#[color "branch"]
#    current = yellow reverse
#    local = yellow
#    remote = green
#[color "diff"]
#    meta = yellow bold
#    frag = magenta bold
#    old = red bold
#    new = green bold
#[color "status"]
#    added = yellow
#    changed = green
#    untracked = cyan
## Aliases are command shortcuts
[alias]
  rb  = !git for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads/ | head -20
  rbr = !git for-each-ref --sort=-committerdate --format='%(refname:short)' refs/remotes/ | head -20
  cof = !git checkout $(git for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads/ | head -20 | fzf)
#  co = checkout
#  di = diff
#  dc = diff --cached
#  aa = add --all
  aap = add --all -p
#  ff = merge --ff-only
#  pullff = pull --ff-only
#  noff = merge --no-ff
#  fa = fetch --all
#  pom = push origin master
#  b = branch
#  ds = diff --stat=160,120
#  dh1 = diff HEAD~1
#  st = status
#  rc = rebase --continue
#  rs = rebase --skip

  # Divergence (commits we added and commits remote added)
  div = divergence

  # Goodness (summary of diff lines added/removed/total)
  gn = goodness
  gnc = goodness --cached

  # Fancy logging.
  #   h = head
  #   hp = head with patch
  #   r = recent commits, only current branch
  #   ra = recent commits, all reachable refs
  #   l = all commits, only current branch
  #   la = all commits, all reachable refs
  head = !git l -1
  h = !git head
  hp = "!. ~/.githelpers && show_git_head"
  r = !git l -30
  ra = !git r --all
  l = "!. ~/.githelpers && pretty_git_log"
  la = !git l --all

  # lg is now a shortcut for a pretty log with short commit messages
  # See the log manpage: https://www.kernel.org/pub/software/scm/git/docs/git-log.html
  # for explanations of what these options do
  lg = log \
    --graph \
    --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' \
    --abbrev-commit \
    --date=relative

  # Shorthand for commit, also enforces diff display in editor before commit
  ci = commit --verbose

  # Shorthand for a less noisy status
  s = commit --dry-run --short

  # More sensible names for adding and removing files from the readme
  stage = add
  unstage = reset HEAD

  # Edit the last commit
  amend= commit --verbose --amend
[push]
  default = current
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[user]
  name = jm96441n
  email = john@johnmaguirdeveloper.com
[includeIf "gitdir:/Users/john.maguire/"]
  path = ~/.dotfiles/git/work/.gitconfig
[includeIf "gitdir:$HOME/.dotfiles"]
  path = ~/.dotfiles/git/personal/.gitconfig
[includeIf "gitdir:$HOME/AdventOfCode"]
  path = ~/.dotfiles/git/personal/.gitconfig
[includeIf "gitdir:$HOME/omscs"]
  path = ~/.dotfiles/git/omscs/.gitconfig
[grep]
  linenumber = true
[url "ssh://git@gitlab.cbinsights.com/"]
	insteadOf = https://gitlab.cbinsights.com/
[init]
	defaultBranch = main
